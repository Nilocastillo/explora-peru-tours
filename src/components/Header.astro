---
const navItems = [
  { text: "Nosotros", href: "#" },
  { text: "Paquetes de Viaje", href: "#" },
  { text: "Tours", href: "#" },
  { text: "Lugares a visitar", href: "#" },
];
---

<header class="fixed top-0 left-0 right-0 z-50 w-full px-6">
  <nav
    class="max-w-7xl mx-auto flex justify-between items-center py-8 relative"
  >
    <!-- Logo -->
    <div class="ashrink-0 logo-container text-white">
      <a href="/">
        <img
          src="/logo-explora-peru-tours.svg"
          alt="Explora Perú Tours"
          class="h-14 lg:h-18 w-auto object-contain"
          width="350"
          height="auto"
          loading="eager"
        />
      </a>
    </div>
    <!-- Enlaces del menu -->
    <div
      class="md:flex hidden lg:flex items-center justify-center gap-8 z-10 md:gap-2"
    >
      {
        navItems.map((item) => (
          <a
            href={item.href}
            class="font-medium text-base text-white uppercase transition-all duration-300 py-4 px-4 hover:bg-primary rounded-2 hover:text-white"
          >
            {item.text}
          </a>
        ))
      }
    </div>

    <!-- Botón menú móvil -->
    <button
      aria-label="Abrir menú de navegación"
      aria-controls="mobile-menu"
      aria-expanded="false"
      class="md:hidden p-2 text-white focus:outline-none z-20 absolute right-6"
      id="mobile-menu-button"
    >
      <svg
        id="icon-hamburger"
        class="w-6 h-6 cursor-pointer"
        fill="none"
        stroke="currentColor"
        viewBox="0 0 24 24"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M4 6h16M4 12h16M4 18h16"></path>
      </svg>

      <svg
        id="icon-close"
        class="w-6 h-6 cursor-pointer hidden"
        fill="none"
        stroke="currentColor"
        viewBox="0 0 24 24"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M6 18L18 6M6 6l12 12"></path>
      </svg>
    </button>
    <div
      class="hidden md:hidden absolute top-full left-0 right-0 w-full bg-opacity-95 bg-white shadow-lg z-50"
      id="mobile-menu"
    >
      <div class="px-4 pt-4 pb-5 space-y-3 max-w-md mx-auto">
        {
          navItems.map((item) => (
            <a
              href={item.href}
              class="block py-2 px-4 font-bebas tracking-wide text-lg text-center text-primary hover:text-secondary"
            >
              {item.text}
            </a>
          ))
        }
      </div>
    </div>
  </nav>
</header>

<style>
  :global(.navbar-scrolled) {
    transform: translateY(0);
    transition: all 0.3s ease;
  }

  :global(.navbar-scrolled .logo-container img) {
    transform: scale(0.9);
  }

  nav a img {
    transition: transform 0.3s ease;
  }

  header {
    background: transparent;
    animation: header-blur-scroll 0.3s linear both;
    animation-timeline: scroll();
    animation-range: 0 250px;
  }

  @keyframes header-blur-scroll {
    0% {
      backdrop-filter: blur(0px);
      background: transparent;
    }

    100% {
      backdrop-filter: blur(10px);
      background: rgba(0, 0, 0, 0.2);
      padding-bottom: var(--spacing-6);
    }
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const menuButton = document.getElementById("mobile-menu-button");
    const mobileMenu = document.getElementById("mobile-menu");
    const iconHamburger = document.getElementById("icon-hamburger");
    const iconClose = document.getElementById("icon-close");

    if (menuButton && mobileMenu && iconHamburger && iconClose) {
      menuButton.addEventListener("click", (e) => {
        e.stopPropagation();
        mobileMenu.classList.toggle("hidden");
        iconHamburger.classList.toggle("hidden");
        iconClose.classList.toggle("hidden");

        const expanded = mobileMenu.classList.contains("hidden")
          ? "false"
          : "true";
        menuButton.setAttribute("aria-expanded", expanded);
      });

      document.addEventListener("click", (e) => {
        const target = e.target as Node;
        const isClickInside =
          (menuButton?.contains(target) ?? false) ||
          (mobileMenu?.contains(target) ?? false);

        if (!mobileMenu?.classList.contains("hidden") && !isClickInside) {
          mobileMenu?.classList.add("hidden");
          iconHamburger?.classList.remove("hidden");
          iconClose?.classList.add("hidden");
          menuButton?.setAttribute("aria-expanded", "false");
        }
      });

      const navbar = document.querySelector("nav");
      const handleScroll = () => {
        if (window.scrollY > 50) {
          navbar?.classList.add("navbar-scrolled");
        } else {
          navbar?.classList.remove("navbar-scrolled");
        }
      };

      window.addEventListener("scroll", handleScroll);

      const closeMenu = () => {
        if (!mobileMenu || !menuButton || !iconHamburger || !iconClose) return;
        if (mobileMenu.classList.contains("hidden")) return;
        mobileMenu.classList.add("hidden");
        iconHamburger.classList.remove("hidden");
        iconClose.classList.add("hidden");
        menuButton.setAttribute("aria-expanded", "false");
      };

      if (mobileMenu) {
        mobileMenu.querySelectorAll("a").forEach((a) => {
          a.addEventListener("click", closeMenu);
        });
      }

      window.addEventListener("hashchange", closeMenu);
    }
  });
</script>
