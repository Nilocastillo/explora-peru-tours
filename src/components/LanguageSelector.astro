---
import ChevronIcon from "@/assets/Chevron.svg";
import { LANGUAGES } from "../i18n/ui";
import {
  getRouteFromUrl,
  useTranslatedPath,
  getLangFromUrl,
} from "../i18n/utils";

const route = getRouteFromUrl(Astro.url);
const lang = getLangFromUrl(Astro.url);
const translatePath = useTranslatedPath(lang);

const currentLocaleData = LANGUAGES[lang];
const otherLocales = Object.values(LANGUAGES).filter(
  (locale) => locale.code !== lang,
);
---

<div class="relative inline-block text-left mr-24 lg:mr-0">
  <div
    class="group text-white rounded-md text-xs font-semibold bg-black/30 hover:bg-black/70 transition-all"
  >
    <button
      id="lang-toggle"
      type="button"
      class="inline-flex justify-start items-center w-full gap-x-2 px-3 py-2"
      aria-expanded="false"
      aria-haspopup="true"
    >
      <span class="inline-block w-5 h-5">
        <currentLocaleData.flag class="w-full h-full" />
      </span>
      {currentLocaleData.name}
      <ChevronIcon
        class="transition-transform duration-200 w-4 h-4"
        id="chevron"
      />
    </button>
    <ul
      id="lang-menu"
      class="group-hover:block hidden absolute w-full bg-black/30 rounded-md"
    >
      {
        otherLocales.map((locale) => (
          <li class="py-[2px]">
            <a
              class="rounded-md hover:bg-black/70 whitespace-nowrap inline-flex justify-start items-center w-full gap-x-2 px-3 py-2 text-white transition-all"
              href={translatePath(`/${route ? route : ""}`, locale.code)}
            >
              <span class="inline-block w-5 h-5">
                <locale.flag class="w-full h-full" />
              </span>
              {locale.name}
            </a>
          </li>
        ))
      }
    </ul>
  </div>
</div>

<script>
  document.addEventListener("astro:page-load", () => {
    const toggle = document.getElementById("lang-toggle");
    const menu = document.getElementById("lang-menu");
    const chevron = document.getElementById("chevron");

    if (!toggle || !menu || !chevron) return;

    toggle.addEventListener("click", () => {
      menu.classList.toggle("hidden");
      chevron.classList.toggle("rotate-180");
    });
  });
</script>
